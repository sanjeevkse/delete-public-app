{
  "info": {
    "_postman_id": "b1c1efc5-be16-443b-b41e-563b719efa40",
    "name": "Auth Flow - OTP Login",
    "description": "Complete authentication flow with OTP request, validation, and token retrieval including failure states",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
    "_exporter_id": "1182352"
  },
  "item": [
    {
      "name": "1. Request OTP - Success",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has OTP\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('otp');",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData).to.have.property('attemptsLeft');",
              "    ",
              "    // Save OTP for login step",
              "    pm.collectionVariables.set(\"otp\", jsonData.otp);",
              "});",
              "",
              "pm.test(\"Message indicates success\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('OTP generated successfully');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"contactNumber\": \"{{contactNumber}}\"\n}"
        },
        "url": "{{baseUrl}}/auth/request-otp",
        "description": "Request OTP for a valid contact number"
      },
      "response": []
    },
    {
      "name": "2. Request OTP - Missing Contact Number",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Error message indicates missing contactNumber\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('contactNumber is required');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": "{{baseUrl}}/auth/request-otp",
        "description": "Failure case: Request OTP without providing contact number"
      },
      "response": []
    },
    {
      "name": "3. Login - Success",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains token\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('token');",
              "    pm.expect(jsonData).to.have.property('user');",
              "    pm.expect(jsonData).to.have.property('access');",
              "    pm.expect(jsonData).to.have.property('userExists');",
              "    ",
              "    // Save token for authenticated requests",
              "    pm.collectionVariables.set(\"authToken\", jsonData.token);",
              "});",
              "",
              "pm.test(\"Token is not empty\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.token).to.be.a('string').and.not.empty;",
              "});",
              "",
              "pm.test(\"User object is present\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.user).to.be.an('object');",
              "    pm.expect(jsonData.user).to.have.property('contactNumber');",
              "});"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": ["// Wait a moment to ensure OTP is ready", "setTimeout(function(){}, 500);"],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"contactNumber\": \"{{contactNumber}}\",\n  \"otp\": \"{{otp}}\"\n}"
        },
        "url": "{{baseUrl}}/auth/login",
        "description": "Login with valid OTP and contact number. Token is automatically saved for subsequent requests."
      },
      "response": []
    },
    {
      "name": "4. Login - Missing Contact Number",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Error message indicates missing contactNumber\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('contactNumber is required');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"otp\": \"123456\"\n}"
        },
        "url": "{{baseUrl}}/auth/login",
        "description": "Failure case: Login without contact number"
      },
      "response": []
    },
    {
      "name": "5. Login - Missing OTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Error message indicates missing OTP\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('otp is required');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"contactNumber\": \"{{contactNumber}}\"\n}"
        },
        "url": "{{baseUrl}}/auth/login",
        "description": "Failure case: Login without OTP"
      },
      "response": []
    },
    {
      "name": "6. Login - Invalid OTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "",
              "pm.test(\"Error message indicates invalid OTP\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('OTP expired or not found');",
              "});"
            ],
            "type": "text/javascript",
            "packages": {},
            "requests": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"contactNumber\": \"{{contactNumber}}\",\n  \"otp\": \"000000\"\n}"
        },
        "url": "{{baseUrl}}/auth/login",
        "description": "Failure case: Login with wrong OTP"
      },
      "response": []
    },
    {
      "name": "7. Login - Expired OTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "",
              "pm.test(\"Error message indicates expired OTP\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.include('OTP expired');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"contactNumber\": \"{{contactNumber}}\",\n  \"otp\": \"999999\"\n}"
        },
        "url": "{{baseUrl}}/auth/login",
        "description": "Failure case: Login with expired OTP (wait for OTP expiry time before testing)"
      },
      "response": []
    },
    {
      "name": "8. Test Authenticated Request - Get Sidebar",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Token authentication works\", function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": "{{baseUrl}}/auth/sidebar",
        "description": "Test that the token works for authenticated requests"
      },
      "response": []
    },
    {
      "name": "9. Test Authenticated Request - No Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "",
              "pm.test(\"Error indicates missing authentication\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": "{{baseUrl}}/auth/sidebar",
        "description": "Failure case: Access protected endpoint without token"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "requests": {},
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "requests": {},
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://public.nammarajajinagar.com"
    },
    {
      "key": "contactNumber",
      "value": "9876543210"
    },
    {
      "key": "otp",
      "value": ""
    },
    {
      "key": "authToken",
      "value": ""
    }
  ]
}
